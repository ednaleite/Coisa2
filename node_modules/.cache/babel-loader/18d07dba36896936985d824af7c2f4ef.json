{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Videos\\\\chat-teste\\\\src\\\\componentes\\\\chat\\\\ChatConversa.js\";\nimport React, { Component } from 'react';\nimport { Alert, Badge } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport '../chat/chat.css';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\n\nclass ChatConversa extends Component {\n  renderMensagem(msg, k) {\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n    // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n    const ROOT_CSS = css({\n      height: 200,\n      width: 300\n    });\n    return React.createElement(\"div\", {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(ScrollToBottom, {\n      className: ROOT_CSS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, msg.origem === \"user\" && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"textouc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"info\",\n      id: \"teste\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, msg.texto)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/duvidas.png\",\n      id: \"userconversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })))), msg.origem === \"bot\" && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"iracema\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/iracema.jpg\",\n      id: \"botconversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"textobc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"dark\",\n      id: \"teste2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, msg.texto))))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-conversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, Object.keys(this.props.mensagens).map(key => {\n      return this.renderMensagem(this.props.mensagens[key], key);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mensagens: state.chat.mensagens\n  };\n};\n\nexport default connect(mapStateToProps, null)(ChatConversa);","map":{"version":3,"sources":["C:\\Users\\Suporte\\Videos\\chat-teste\\src\\componentes\\chat\\ChatConversa.js"],"names":["React","Component","Alert","Badge","connect","ScrollToBottom","css","ChatConversa","renderMensagem","msg","k","ROOT_CSS","height","width","origem","texto","render","Object","keys","props","mensagens","map","key","mapStateToProps","state","chat"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAcC,KAAd,QAA0B,YAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,GAAT,QAAoB,QAApB;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAoC;AAEjCO,EAAAA,cAAc,CAACC,GAAD,EAAKC,CAAL,EAAO;AACpB;AACI;AACA,UAAMC,QAAQ,GAAGL,GAAG,CAAC;AACjBM,MAAAA,MAAM,EAAE,GADS;AAEjBC,MAAAA,KAAK,EAAE;AAFU,KAAD,CAApB;AAKL,WACS;AAAK,MAAA,GAAG,EAAIH,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAGC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKF,GAAG,CAACK,MAAJ,KAAe,MAAf,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAI3B;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCL,GAAG,CAACM,KAApC,CADR,CAFA,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,oBAAT;AAA8B,MAAA,EAAE,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CAJ2B,CAF9B,EAuBGN,GAAG,CAACK,MAAJ,KAAe,KAAf,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACpB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR;AAAK,MAAA,GAAG,EAAC,oBAAT;AAA8B,MAAA,EAAE,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,CADJ,EAII;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACR,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCL,GAAG,CAACM,KAArC,CADQ,CAJJ,CADoB,CAvB3B,CADG,CADT;AAyCD;;AAGEC,EAAAA,MAAM,GAAE;AAEJ,WACK;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,SAAvB,EAAkCC,GAAlC,CAAsCC,GAAG,IAAI;AACxC,aAAO,KAAKd,cAAL,CAAoB,KAAKW,KAAL,CAAWC,SAAX,CAAqBE,GAArB,CAApB,EAA8CA,GAA9C,CAAP;AACH,KAFF,CAFN,CADL;AASH;;AAjE+B;;AAoEpC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADpB,GAAN;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAACmB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,YAA/B,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {Alert,Badge} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport '../chat/chat.css';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { css } from 'glamor';\n\n\nclass ChatConversa extends Component{\n  \n   renderMensagem(msg,k){\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n        // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n        const ROOT_CSS = css({\n            height: 200,\n            width: 300\n          });\n     \n   return (\n            <div key = {k}>\n         <ScrollToBottom className={ ROOT_CSS }>\n          {\n              msg.origem === \"user\" && <span>\n                 \n              {/* <Badge color='info' id=\"usertalk\">VocÃª disse</Badge> */}\n             \n            <div className='usuario'>\n\n            <div id='textouc'>\n                    <Alert color='info' id='teste'>{msg.texto}</Alert>\n               </div>\n\n                <div>\n                    <img src='images/duvidas.png' id='userconversa'/>\n                </div>\n               \n           </div>\n            \n        </span>\n          \n          }\n\n          {\n            msg.origem === \"bot\" && <span>\n                <div className='iracema'>\n                    <div>\n            <img src='images/iracema.jpg' id='botconversa'/>\n                    </div>\n                    <div id='textobc'>\n            <Alert color='dark' id='teste2'>{msg.texto}</Alert>\n                    </div>\n            </div>\n            </span>\n          }\n          </ScrollToBottom>\n             </div>\n\n\n      )\n }\n   \n   \n    render(){\n    \n        return(\n             <div className='chat-conversa'>\n                {\n                   Object.keys(this.props.mensagens).map(key => {\n                        return this.renderMensagem(this.props.mensagens[key],key)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        mensagens: state.chat.mensagens\n    }\n}\n\nexport default connect(mapStateToProps, null)(ChatConversa)"]},"metadata":{},"sourceType":"module"}