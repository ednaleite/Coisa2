{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Videos\\\\chat-teste\\\\src\\\\componentes\\\\chat\\\\ChatMensagem.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { enviaMensagem } from '../store/actions/chat';\nimport { conversaWatson } from './../store/actions/watson';\nimport '../chat/chat.css';\n\nclass ChatMensagem extends Component {\n  constructor(props) {\n    super(props);\n    this.inputEnviaTexto = this.inputEnviaTexto.bind(this);\n    this.props.conversaWatson(\"inicio\", \"\");\n  }\n\n  inputEnviaTexto() {\n    const b = document.getElementById('input');\n    const mensagem = {\n      texto: b.value,\n      origem: 'user'\n    };\n    let contexto = {}; //console.log('negocio', this.props.resposta)\n\n    if (this.props.resposta.data && this.props.resposta.data.context) {\n      contexto = this.props.resposta.data.context;\n    }\n\n    if (b.value != \"\") {\n      this.props.enviaTexto(mensagem);\n      this.props.conversaWatson(mensagem, contexto);\n      b.value = '';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-mensagem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"visao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Pergunte-me\",\n      id: \"input\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      onClick: this.inputEnviaTexto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Enviar\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    enviaTexto: msg => dispatch(enviaMensagem(msg)),\n    conversaWatson: (msg, contexto) => dispatch(conversaWatson(msg, contexto))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    resposta: state.watson.respostas\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMensagem);","map":{"version":3,"sources":["C:\\Users\\Suporte\\Videos\\chat-teste\\src\\componentes\\chat\\ChatMensagem.js"],"names":["React","Component","InputGroup","Input","InputGroupAddon","Button","connect","enviaMensagem","conversaWatson","ChatMensagem","constructor","props","inputEnviaTexto","bind","b","document","getElementById","mensagem","texto","value","origem","contexto","resposta","data","context","enviaTexto","render","mapDispatchToProps","dispatch","msg","mapStateToProps","state","watson","respostas"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,EAAoBC,KAApB,EAA2BC,eAA3B,EAA4CC,MAA5C,QAAyD,YAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,uBAA5B;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,OAAO,kBAAP;;AAGA,MAAMC,YAAN,SAA2BR,SAA3B,CAAoC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKF,KAAL,CAAWH,cAAX,CAA0B,QAA1B,EAAoC,EAApC;AACH;;AAEDI,EAAAA,eAAe,GAAE;AAIZ,UAAME,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAV;AAEA,UAAMC,QAAQ,GAAG;AACbC,MAAAA,KAAK,EAAEJ,CAAC,CAACK,KADI;AAEbC,MAAAA,MAAM,EAAE;AAFK,KAAjB;AAKA,QAAIC,QAAQ,GAAG,EAAf,CAXY,CAYZ;;AACA,QAAI,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,IAApB,IAA4B,KAAKZ,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBC,OAAzD,EAAkE;AAC9DH,MAAAA,QAAQ,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBC,OAApC;AACH;;AAED,QAAGV,CAAC,CAACK,KAAF,IAAW,EAAd,EAAiB;AACjB,WAAKR,KAAL,CAAWc,UAAX,CAAsBR,QAAtB;AACA,WAAKN,KAAL,CAAWH,cAAX,CAA0BS,QAA1B,EAAoCI,QAApC;AACAP,MAAAA,CAAC,CAACK,KAAF,GAAU,EAAV;AACG;AACL;;AAIFO,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,aAAnB;AAAiC,MAAA,EAAE,EAAC,OAApC;AAA4C,MAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAED,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKd,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFC,CADA,CAFJ,CADJ;AAaH;;AA/C+B;;AAmDpC,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFH,IAAAA,UAAU,EAAGI,GAAD,IAASD,QAAQ,CAACrB,aAAa,CAACsB,GAAD,CAAd,CAD3B;AAEFrB,IAAAA,cAAc,EAAE,CAACqB,GAAD,EAAMR,QAAN,KAAmBO,QAAQ,CAACpB,cAAc,CAACqB,GAAD,EAAMR,QAAN,CAAf;AAFzC,GAAN;AAIH,CALD;;AAOA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFT,IAAAA,QAAQ,EAAES,KAAK,CAACC,MAAN,CAAaC;AADrB,GAAN;AAGH,CAJD;;AAOA,eAAe3B,OAAO,CAACwB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6ClB,YAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {InputGroup, Input, InputGroupAddon, Button} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {enviaMensagem} from '../store/actions/chat'\nimport {conversaWatson} from './../store/actions/watson'\nimport '../chat/chat.css'\n\n\nclass ChatMensagem extends Component{\n   constructor(props){\n       super(props)\n       this.inputEnviaTexto = this.inputEnviaTexto.bind(this)\n       this.props.conversaWatson(\"inicio\", \"\")\n   }\n\n   inputEnviaTexto(){\n\n        \n\n        const b = document.getElementById('input');\n        \n        const mensagem = {\n            texto: b.value,\n            origem: 'user'\n        }\n        \n        let contexto = {}\n        //console.log('negocio', this.props.resposta)\n        if (this.props.resposta.data && this.props.resposta.data.context) {\n            contexto = this.props.resposta.data.context\n        }\n\n        if(b.value != \"\"){\n        this.props.enviaTexto(mensagem)\n        this.props.conversaWatson(mensagem, contexto)\n        b.value = ''\n          }\n     }\n   \n\n    \n    render(){\n        return(\n            <div className='chat-mensagem'>\n                <hr/>\n                <div id='visao'>\n                <InputGroup>\n                <Input placeholder='Pergunte-me' id=\"input\" required/>\n               <InputGroupAddon addonType='append'>\n                   <Button color='dark' onClick={this.inputEnviaTexto} >Enviar</Button>\n               </InputGroupAddon>\n                </InputGroup>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        enviaTexto: (msg) => dispatch(enviaMensagem(msg)),\n        conversaWatson: (msg, contexto) => dispatch(conversaWatson(msg, contexto))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        resposta: state.watson.respostas\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMensagem)\n"]},"metadata":{},"sourceType":"module"}