{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Videos\\\\chat-teste\\\\src\\\\componentes\\\\chat\\\\ChatConversa.js\";\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport '../chat/chat.css';\n\nclass ChatConversa extends Component {\n  renderMensagem(msg, k) {\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n    // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n    // alert(msg.texto);\n    if (msg.texto == 'Atendimento Postumo' || msg.texto == 'Atendimento postumo' || msg.texto == 'atendimento postumo') {\n      localStorage.setItem('cont', 1);\n    }\n\n    if (localStorage.getItem('cont')) {\n      if (localStorage.getItem('cont') == 3) {\n        alert(localStorage.getItem('cont'));\n        localStorage.clear();\n        return React.createElement(\"div\", {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, msg.origem === \"user\" && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"usuario\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"textouc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          color: \"info\",\n          id: \"teste\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, msg.texto)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/duvidas.png\",\n          id: \"userconversa\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })))), msg.origem === \"bot\" && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iracema\",\n          id: \"fazendolink\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/iracema.jpg\",\n          id: \"botconversa\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), React.createElement(\"a\", {\n          id: \"textobc\",\n          href: msg.texto,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          color: \"dark\",\n          id: \"teste3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Clique aqui:\", React.createElement(\"span\", {\n          id: \"link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, msg.texto))))));\n      } else {\n        if (localStorage.getItem('cont') == 2) {\n          alert('cont 3' + localStorage.getItem('cont'));\n          localStorage.setItem('cont', 3);\n        } else {\n          alert('cont 2' + localStorage.getItem('cont'));\n          localStorage.setItem('cont', 2);\n        }\n\n        return React.createElement(\"div\", {\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, msg.origem === \"user\" && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"usuario\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"textouc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          color: \"info\",\n          id: \"teste\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, msg.texto)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/duvidas.png\",\n          id: \"userconversa\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })))), msg.origem === \"bot\" && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iracema\",\n          id: \"fazendolink\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"images/iracema.jpg\",\n          id: \"botconversa\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"textobc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          color: \"dark\",\n          id: \"teste2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, msg.texto)))));\n      }\n    } else {\n      return React.createElement(\"div\", {\n        key: k,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, msg.origem === \"user\" && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"usuario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"textouc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"info\",\n        id: \"teste\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, msg.texto)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/duvidas.png\",\n        id: \"userconversa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })))), msg.origem === \"bot\" && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"iracema\",\n        id: \"fazendolink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"images/iracema.jpg\",\n        id: \"botconversa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"textobc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"dark\",\n        id: \"teste2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, msg.texto)))));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-conversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, Object.keys(this.props.mensagens).map(key => {\n      return this.renderMensagem(this.props.mensagens[key], key);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mensagens: state.chat.mensagens\n  };\n};\n\nexport default connect(mapStateToProps, null)(ChatConversa);","map":{"version":3,"sources":["C:\\Users\\Suporte\\Videos\\chat-teste\\src\\componentes\\chat\\ChatConversa.js"],"names":["React","Component","Alert","connect","ChatConversa","renderMensagem","msg","k","texto","localStorage","setItem","getItem","alert","clear","origem","render","Object","keys","props","mensagens","map","key","mapStateToProps","state","chat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Alert} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport '../chat/chat.css';\n\n\n\nclass ChatConversa extends Component{\n  \n   \n   renderMensagem(msg,k){\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n        // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n        // alert(msg.texto);\n            if(msg.texto == 'Atendimento Postumo' || msg.texto == 'Atendimento postumo' || msg.texto == 'atendimento postumo'){\n                localStorage.setItem('cont', 1);\n            }\n            if(localStorage.getItem('cont')){\n                if(localStorage.getItem('cont') == 3){\n                alert (localStorage.getItem('cont'));\n                localStorage.clear();\n            return (\n            \n                    <div key = {k}>\n                \n                {\n                    msg.origem === \"user\" && <span>\n                        \n                    {/* <Badge color='info' id=\"usertalk\">Você disse</Badge> */}\n                    \n                    <div className='usuario'>\n\n                    <div id='textouc'>\n                            <Alert color='info' id='teste'>{msg.texto}</Alert>\n                    </div>\n\n                        <div>\n                            <img src='images/duvidas.png' id='userconversa'/>\n                        </div>\n                    \n                </div>\n                    \n                </span>\n                \n                }\n\n                {\n                    msg.origem === \"bot\" && <span>\n                        <div className='iracema' id='fazendolink'>\n                            <div>\n                                <img src='images/iracema.jpg' id='botconversa'/>\n                            </div>\n                            \n                            <a id='textobc' href={msg.texto}>\n                                <Alert color='dark' id='teste3'>Clique aqui:<span id='link'>{msg.texto}</span></Alert>\n                            </a>\n                        </div>\n                    </span>\n                }\n                \n                    </div>\n\n\n            )\n            \n        }else{\n            if(localStorage.getItem('cont') == 2){\n                alert ('cont 3' + localStorage.getItem('cont'));\n                localStorage.setItem('cont', 3);\n            }else{\n                alert ('cont 2' + localStorage.getItem('cont'));\n                localStorage.setItem('cont', 2);\n            }\n            return (\n            \n                <div key = {k}>\n            \n            {\n                msg.origem === \"user\" && <span>\n                    \n                {/* <Badge color='info' id=\"usertalk\">Você disse</Badge> */}\n                \n                <div className='usuario'>\n\n                <div id='textouc'>\n                        <Alert color='info' id='teste'>{msg.texto}</Alert>\n                </div>\n\n                    <div>\n                        <img src='images/duvidas.png' id='userconversa'/>\n                    </div>\n                \n            </div>\n                \n            </span>\n            \n            }\n\n            {\n                msg.origem === \"bot\" && <span>\n                    <div className='iracema' id='fazendolink'>\n                        <div>\n                            <img src='images/iracema.jpg' id='botconversa'/>\n                        </div>\n                        \n                        <div id='textobc'>\n                            <Alert color='dark' id='teste2'>{msg.texto}</Alert>\n                        </div>\n                    </div>\n                </span>\n            }\n            \n                </div>\n    \n        )\n        }\n        }else{\n            return (\n            \n                <div key = {k}>\n            \n            {\n                msg.origem === \"user\" && <span>\n                    \n                {/* <Badge color='info' id=\"usertalk\">Você disse</Badge> */}\n                \n                <div className='usuario'>\n\n                <div id='textouc'>\n                        <Alert color='info' id='teste'>{msg.texto}</Alert>\n                </div>\n\n                    <div>\n                        <img src='images/duvidas.png' id='userconversa'/>\n                    </div>\n                \n            </div>\n                \n            </span>\n            \n            }\n\n            {\n                msg.origem === \"bot\" && <span>\n                    <div className='iracema' id='fazendolink'>\n                        <div>\n                            <img src='images/iracema.jpg' id='botconversa'/>\n                        </div>\n                        \n                        <div id='textobc'>\n                            <Alert color='dark' id='teste2'>{msg.texto}</Alert>\n                        </div>\n                    </div>\n                </span>\n            }\n            \n                </div>\n    \n        )\n    }\n}\n   \n    render(){\n    \n        return(\n             <div className='chat-conversa'>\n                {\n                   Object.keys(this.props.mensagens).map(key => {\n                        return this.renderMensagem(this.props.mensagens[key],key)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        mensagens: state.chat.mensagens\n    }\n}\n\nexport default connect(mapStateToProps, null)(ChatConversa)"]},"metadata":{},"sourceType":"module"}