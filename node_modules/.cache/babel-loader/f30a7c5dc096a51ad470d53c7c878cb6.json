{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Videos\\\\chat-teste\\\\src\\\\componentes\\\\chat\\\\ChatConversa.js\";\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport '../chat/chat.css';\n\nclass ChatConversa extends Component {\n  renderMensagem(msg, k) {\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n    // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n    return React.createElement(\"div\", {\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, msg.origem === \"user\" && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"usuario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"textouc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"info\",\n      id: \"teste\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, msg.texto)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/duvidas.png\",\n      id: \"userconversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })))), msg.origem === \"bot\" && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"iracema\",\n      id: \"fazendolink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"images/iracema.jpg\",\n      id: \"botconversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      id: \"textobc\",\n      href: msg.texto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"dark\",\n      id: \"teste2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, msg.texto)))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-conversa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, Object.keys(this.props.mensagens).map(key => {\n      return this.renderMensagem(this.props.mensagens[key], key);\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mensagens: state.chat.mensagens\n  };\n};\n\nexport default connect(mapStateToProps, null)(ChatConversa);","map":{"version":3,"sources":["C:\\Users\\Suporte\\Videos\\chat-teste\\src\\componentes\\chat\\ChatConversa.js"],"names":["React","Component","Alert","connect","ChatConversa","renderMensagem","msg","k","origem","texto","render","Object","keys","props","mensagens","map","key","mapStateToProps","state","chat"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,kBAAP;;AAIA,MAAMC,YAAN,SAA2BH,SAA3B,CAAoC;AAGjCI,EAAAA,cAAc,CAACC,GAAD,EAAKC,CAAL,EAAO;AACpB;AACI;AAEL,WAES;AAAK,MAAA,GAAG,EAAIA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGED,GAAG,CAACE,MAAJ,KAAe,MAAf,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAI3B;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,GAAG,CAACG,KAApC,CADR,CAFA,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,oBAAT;AAA8B,MAAA,EAAE,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CAJ2B,CAH3B,EAwBAH,GAAG,CAACE,MAAJ,KAAe,KAAf,IAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACpB;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,oBAAT;AAA8B,MAAA,EAAE,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAG,MAAA,EAAE,EAAC,SAAN;AAAgB,MAAA,IAAI,EAAEF,GAAG,CAACG,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,GAAG,CAACG,KAArC,CADJ,CALJ,CADoB,CAxBxB,CAFT;AA2CD;;AAGEC,EAAAA,MAAM,GAAE;AAEJ,WACK;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEMC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,SAAvB,EAAkCC,GAAlC,CAAsCC,GAAG,IAAI;AACxC,aAAO,KAAKX,cAAL,CAAoB,KAAKQ,KAAL,CAAWC,SAAX,CAAqBE,GAArB,CAApB,EAA8CA,GAA9C,CAAP;AACH,KAFF,CAFN,CADL;AASH;;AAhE+B;;AAmEpC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,IAAN,CAAWL;AADpB,GAAN;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACc,eAAD,EAAkB,IAAlB,CAAP,CAA+Bb,YAA/B,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport {Alert} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport '../chat/chat.css';\n\n\n\nclass ChatConversa extends Component{\n  \n   \n   renderMensagem(msg,k){\n    // var objScrDiv = document.getElementsByClassName(\"chat-conversa\");\n        // objScrDiv.scrollTop = objScrDiv.scrollHeight;\n        \n   return (\n       \n            <div key = {k}>\n         \n          {\n              msg.origem === \"user\" && <span>\n                 \n              {/* <Badge color='info' id=\"usertalk\">VocÃª disse</Badge> */}\n             \n            <div className='usuario'>\n\n            <div id='textouc'>\n                    <Alert color='info' id='teste'>{msg.texto}</Alert>\n               </div>\n\n                <div>\n                    <img src='images/duvidas.png' id='userconversa'/>\n                </div>\n               \n           </div>\n            \n        </span>\n          \n          }\n\n          {\n            msg.origem === \"bot\" && <span>\n                <div className='iracema' id='fazendolink'>\n                    <div>\n                        <img src='images/iracema.jpg' id='botconversa'/>\n                    </div>\n\n                    <a id='textobc' href={msg.texto}>\n                        <Alert color='dark' id='teste2'>{msg.texto}</Alert>\n                    </a>\n                </div>\n            </span>\n          }\n        \n             </div>\n\n\n      )\n }\n   \n   \n    render(){\n    \n        return(\n             <div className='chat-conversa'>\n                {\n                   Object.keys(this.props.mensagens).map(key => {\n                        return this.renderMensagem(this.props.mensagens[key],key)\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        mensagens: state.chat.mensagens\n    }\n}\n\nexport default connect(mapStateToProps, null)(ChatConversa)"]},"metadata":{},"sourceType":"module"}