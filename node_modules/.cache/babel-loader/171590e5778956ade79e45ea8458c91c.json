{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suporte\\\\Videos\\\\chat-teste\\\\src\\\\componentes\\\\chat\\\\ChatMensagem.js\";\nimport React, { Component } from 'react';\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { enviaMensagem } from '../store/actions/chat';\nimport { conversaWatson } from './../store/actions/watson';\nimport '../chat/chat.css';\n\nclass ChatMensagem extends Component {\n  constructor(props) {\n    super(props);\n    this.inputEnviaTexto = this.inputEnviaTexto.bind(this);\n    this.props.conversaWatson(\"inicio\", \"\");\n  }\n\n  inputEnviaTexto() {\n    const b = document.getElementById('input');\n    const mensagem = {\n      texto: b.value,\n      origem: 'user'\n    };\n    let contexto = {}; //console.log('negocio', this.props.resposta)\n\n    if (this.props.resposta.data && this.props.resposta.data.context) {\n      contexto = this.props.resposta.data.context;\n    }\n\n    if (b.value != \"\") {\n      if (localStorage.getItem('opcao1')) {\n        this.props.enviaTexto(mensagem);\n        this.props.conversaWatson(localStorage.getItem('opcao1') + \"proximo\" + b.value, contexto);\n        var a = localStorage.getItem('opcao1') + \"proximo\" + b.value;\n        b.value = '';\n        alert(a);\n      } else {\n        this.props.enviaTexto(mensagem);\n        this.props.conversaWatson(mensagem, contexto);\n\n        if (b.value == '2') {\n          localStorage.setItem('opcao1', b.value);\n        }\n\n        b.value = '';\n        alert('Eu não entendi foi nada meu filho');\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chat-mensagem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Pergunte-me\",\n      id: \"input\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      onClick: this.inputEnviaTexto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Enviar\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    enviaTexto: msg => dispatch(enviaMensagem(msg)),\n    conversaWatson: (msg, contexto) => dispatch(conversaWatson(msg, contexto))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    resposta: state.watson.respostas\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMensagem);","map":{"version":3,"sources":["C:\\Users\\Suporte\\Videos\\chat-teste\\src\\componentes\\chat\\ChatMensagem.js"],"names":["React","Component","InputGroup","Input","InputGroupAddon","Button","connect","enviaMensagem","conversaWatson","ChatMensagem","constructor","props","inputEnviaTexto","bind","b","document","getElementById","mensagem","texto","value","origem","contexto","resposta","data","context","localStorage","getItem","enviaTexto","a","alert","setItem","render","mapDispatchToProps","dispatch","msg","mapStateToProps","state","watson","respostas"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {InputGroup, Input, InputGroupAddon, Button} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {enviaMensagem} from '../store/actions/chat'\nimport {conversaWatson} from './../store/actions/watson'\nimport '../chat/chat.css'\n\n\nclass ChatMensagem extends Component{\n   constructor(props){\n       super(props)\n       this.inputEnviaTexto = this.inputEnviaTexto.bind(this)\n       this.props.conversaWatson(\"inicio\", \"\")\n   }\n\n   inputEnviaTexto(){\n\n        \n\n        const b = document.getElementById('input');\n        \n        const mensagem = {\n            texto: b.value,\n            origem: 'user'\n        }\n        \n        let contexto = {}\n        //console.log('negocio', this.props.resposta)\n        if (this.props.resposta.data && this.props.resposta.data.context) {\n            contexto = this.props.resposta.data.context\n        }\n\n        if(b.value != \"\"){\n            if(localStorage.getItem('opcao1')){\n                this.props.enviaTexto(mensagem)\n                this.props.conversaWatson(localStorage.getItem('opcao1') + \"proximo\" + b.value, contexto)\n                var a = localStorage.getItem('opcao1') + \"proximo\" + b.value;\n                b.value = ''\n                alert(a);\n            }else{\n                this.props.enviaTexto(mensagem)\n                this.props.conversaWatson(mensagem, contexto)\n                if(b.value == '2'){\n                    localStorage.setItem('opcao1', b.value);   \n                }\n                b.value = ''\n                alert('Eu não entendi foi nada meu filho');\n            }\n\n            \n          }\n     }\n   \n\n    \n    render(){\n        return(\n            <div className='chat-mensagem'>\n                <hr/>\n                <InputGroup>\n                <Input placeholder='Pergunte-me' id=\"input\" required/>\n               <InputGroupAddon addonType='append'>\n                   <Button color='dark' onClick={this.inputEnviaTexto} >Enviar</Button>\n               </InputGroupAddon>\n                </InputGroup>\n            \n            </div>\n        );\n    }\n    \n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        enviaTexto: (msg) => dispatch(enviaMensagem(msg)),\n        conversaWatson: (msg, contexto) => dispatch(conversaWatson(msg, contexto))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        resposta: state.watson.respostas\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMensagem)\n"]},"metadata":{},"sourceType":"module"}